apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: adaptivq
  labels:
    app: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: adaptivq-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: FLASK_APP
          value: "Integration.py"
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: FLASK_ENV
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: CELERY_RESULT_BACKEND
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: adaptivq-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: adaptivq-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: adaptivq-secrets
              key: REDIS_PASSWORD
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: adaptivq-secrets
              key: GEMINI_API_KEY
        - name: FIREBASE_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: adaptivq-secrets
              key: FIREBASE_CREDENTIALS
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: DATABASE_NAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: adaptivq-config
              key: REDIS_PORT
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: adaptivq
spec:
  selector:
    app: backend
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
